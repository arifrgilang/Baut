apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs'
//apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.arifrgilang.baut"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Disable fabric build ID generation for debug builds
//            ext.enableCrashlytics = false
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/core_release.kotlin_module'
    }

    productFlavors {
        production {
            buildConfigField "String", "BASE_URL", String.format("\"%s\"", releaseBaseUrl)
            resValue "string", "app_name", "Baut"
        }
        dev {
            buildConfigField "String", "BASE_URL", String.format("\"%s\"", debugBaseUrl)
            resValue "string", "app_name", "Baut DEV"
        }

        mock {
            buildConfigField "String", "BASE_URL", String.format("\"%s\"", mockBaseUrl)
            resValue "string", "app_name", "Baut MOCK"
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    flavorDimensions "default"

    dataBinding.enabled = true

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

}

def supportVersion = '28.0.0'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //Support Library
    implementation "com.android.support:design:$supportVersion"

    //Life Cycle library
    implementation "android.arch.lifecycle:extensions:1.1.1"

    //Room Library
    implementation "androidx.room:room-runtime:2.2.3"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    kapt "androidx.room:room-compiler:2.2.3"
    implementation "androidx.room:room-ktx:2.2.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"

    //Navigation Library
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'

    //Material Design Library
    implementation 'com.google.android.material:material:1.0.0'

    //Retrofit Library
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

    //RxJava Library
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //Glide Library
    implementation 'com.github.bumptech.glide:glide:4.10.0'

    //Preference Library
    implementation 'androidx.preference:preference:1.1.0'

    // okhttp
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'

    //FirebaseAuth
//    implementation 'com.google.firebase:firebase-auth:19.2.0'

    //Anko
    implementation "org.jetbrains.anko:anko:0.10.8"

    //Page Control Dots
//    implementation 'com.afollestad:viewpagerdots:1.0.0'

    // material dialog
    implementation 'com.afollestad.material-dialogs:core:3.1.1'

    //////////////////// TESTING LIBRARY ///////////////////////

    //Espresso UI Testing Library
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'

    //Support Library

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'

    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.2.0'

    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.25.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.44'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
